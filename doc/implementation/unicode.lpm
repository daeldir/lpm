== Support de l'unicode

Le support de l'unicode  en  python  2  est  une  horreur. Il faut faire
attention à bien utiliser  des  chaînes  de  type  <unicode> au lieu des
chaînes de type <str>, et spécifier  le  type des fichiers ouverts, dont
la sortie standard et  la  sortie  d'erreur  (et l'entrée standard, mais
nous ne sommes pas concernés ici, puisque nous ne la lisons pas). 

Nous commençons par spécifier l'encodage de notre fichier source : 

<Code: début d'un programme python
# -*- encoding: utf-8 -*-
>

Puis nous importons le module  <codecs>,  et spécifions l'encodage de la
sortie standard et de la sortie d'erreur. 

<Code: imports
import codecs
sys.stdout = codecs.getwriter("utf-8")(sys.stdout)
sys.stderr = codecs.getwriter("utf-8")(sys.stderr)
>

Ensuite, nous créons une fonction utilitaire pour lire un fichier : 

<Code: fonctions utilitaires
def read(filename, encoding = "utf-8"):
	f = codecs.open(filename, 'r', encoding = encoding)
	return f.read()
>

//Pour rappel,  il  n'est  pas  nécessaire  de  fermer  manuellement  le
fichier, celui-ci sera fermé à  la  destruction  de l'objet <f>, c'est à
dire à la sortie de la fonction, <f> n'étant plus utilisé.// 

De la même  manière,  nous  créons  une  fonctions  renvoyant les lignes
d'un fichier : 

<Code: fonctions utilitaires
def readlines(filename, encoding = "utf-8"):
	f = codecs.open(filename, 'r', encoding = encoding)
	return f.readlines()
>

Enfin, nous créons une fonction permettant de sauvegarder un fichier : 

<Code: fonctions utilitaires
def write(filename, text, encoding = "utf-8"):
	#f = codecs.open(filename, 'w', encoding = encoding)
	#f.write(text)
    pass

>

//Pour le moment, nous n'écrivons  pas  les  fichiers. Les fonctions qui
génèrent les chaînes  de  caractères  fournies  à  <write> ne retournent
pas encore de texte, et nous  avons  de manière d'éviter une erreur lors
des tests :// 
 - //commenter chaque appel à la fonction <write>,//
 - //rendre la fonction <write> inopérante.//

//Cette dernière solution est bien  plus  pratique.  En attendant que le
code soit plus avancé.// 

Les fonctions  <write>,  <read>  et  <readlines>  prennent  un paramètre
optionnel  permettant  de   spécifier   l'encodage   du   fichier.  Nous
travaillons majoritairement sur des  fichiers  en  UTF-8,  c'est donc la
valeur  par  défaut.  Un   autre   encodage   utilisé  est  <None>  (pas
d'encodage), qui  permet  de  travailler  sur  les  fichiers  de manière
binaire (voir l'opposition (fichier binaire vs fichier texte)[..]) 
..: http://fr.wikipedia.org/wiki/Fichier_binaire

