L'objectif de cet outil est de simplifier la programmation lettrée encore plus
qu'avec AutoNoweb. Pour cela, on utilise un langage de balisage léger, plus
agréable et facile à utiliser que LaTeX. Comme aucun langage de balisage ne
convenait à notre usage (écriture d'un livre avec beaucoup d'inclusion de
code), nous avons écrit le notre.

Notre outil doit être utilisable facilement. Dans l'idéal, un simple
glissé/déposé de notre fichier texte principal devrait : 
 - Reformater notre fichier texte pour rendre sa lecture agréable (justifier le
   texte, formatter le titre…). Ainsi, quel que soit le système et l'éditeur
   utilisé, on peut avoir un rendu identique et cohérent pour toute l'équipe
   sans effort.
 - Générer un ou plusieurs fichiers de documentation, agréables à lire (dans
   une page web, un pdf, un epub ?), et dont les portions de code source sont
   colorées, formattée correctement pour faciliter leur lecture.
 - Extraire le code source dans les fichiers qui vont bien, en créant les
   dossiers nécessaires et sans réécrire les fichiers qui n'ont pas changés.

Le tout en prenant en compte qu'un fichier texte peut en inclure d'autres
(commande ~Get), et en faisant donc toutes ses actions pour tout les fichiers
référencés.

Je répète, avec un simple glissé déposé, ou en lançant la commande dans un
terminal en lui passant un chemin vers un fichier texte. Bref, le plus simple
possible.

S'il y a des problèmes de performance, on envisagera de pouvoir passer des
paramètres pour empêcher certaines actions de s'effectuer (si elles sont
inutiles pour la tâche en cours). (au pire, sur Windows, un script .bat devrait
pouvoir garder la chose exploitable).


